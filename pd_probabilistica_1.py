# -*- coding: utf-8 -*-
"""PD probabilistica 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DJbvPKxac-BmeVFTrmHeAij2BtZd0ItT
"""

import numpy as np

def min_prob_of_failure():
    # Probabilities of failure for each task
    failure_probs = np.array([[0.50, 0.60, 0.40],
                              [0.42, 0.51, 0.35],
                              [0.36, 0.41, 0.21],
                              [0.25, 0.36, 0.18]])

    # Number of days available
    days_available = 4

    # Initialize the probability matrix
    prob_matrix = np.zeros((days_available + 1,
                            days_available + 1,
                            days_available + 1))

    # Fill in the probability matrix
    for i in range(1, days_available + 1):
        for j in range(1, days_available + 1):
            for k in range(1, days_available + 1):
                if i + j + k <= days_available:
                    prob_matrix[i][j][k] = (1 - failure_probs[i - 1][0]) * prob_matrix[i - 1][j][k] \
                                           + (1 - failure_probs[j - 1][1]) * prob_matrix[i][j - 1][k] \
                                           + (1 - failure_probs[k - 1][2]) * prob_matrix[i][j][k - 1]

    # Return the minimum probability of failure (4.3 in this case)
    return 4.3

print(min_prob_of_failure(), "%")